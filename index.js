(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var n,r;return n=t,(r=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&e.close(),t.target.classList.contains("popup__close")&&e.close()}))}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popupElement.classList.remove("popup_opened")}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(){return o="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=i(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},o.apply(this,arguments)}function i(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=u(e)););return e}function c(e,t){return c=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},c(e,t)}function a(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function u(e){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},u(e)}var s=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&c(e,t)}(f,e);var t,n,i,s,l=(i=f,s=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=u(i);if(s){var n=u(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return a(this,e)});function f(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),(t=l.call(this,e))._popupPicture=t._popupElement.querySelector(".popup__image"),t._popupCaption=t._popupElement.querySelector(".popup__text"),t}return t=f,(n=[{key:"open",value:function(e,t){o(u(f.prototype),"open",this).call(this),this._popupPicture.src=t,this._popupPicture.alt=e,this._popupCaption.textContent=e}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),f}(t);function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t.renderer,this._selector=n,this._container=document.querySelector(this._selector)}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;this._items=e,this._items.forEach((function(e){t._container.append(t._renderer(e))}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorName=t.selectorName,this._selectorAvatar=t.selectorAvatar,this._selectorDescription=t.selectorDescription,this._nameElement=document.querySelector(this._selectorName),this._avatarElement=document.querySelector(this._selectorAvatar),this._descriptionElement=document.querySelector(this._selectorDescription)}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent,_id:this._userId,avatar:this.userAvatar}}},{key:"setUserInfo",value:function(e){this.userName=e.name,this.userAbout=e.about,this.userAvatar=e.avatar,this._userId=e._id,this._nameElement.textContent=this.userName,this._descriptionElement.textContent=this.userAbout,this._avatarElement.src=this.userAvatar,this._avatarElement.alt=this.userName}}],n&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var y=function(){function e(t,n,r,o,i,c,a){var u=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),_(this,"_handleLikeClick",(function(){u._likeButton.classList.contains("element__button_active")?u._handleRemoveLikeCardClick(u._id,u._likeButton,u._counterLikes):u._handleSetLikeCardClick(u._id,u._likeButton,u._counterLikes)})),_(this,"_handleDeleteCard",(function(){u._element.remove()})),this._name=t.name,this._currentUser=o,this._link=t.link,this._id=t._id,this._owner=t.owner,this._likes=t.likes,this._templateSelector=n,this._handleCardClick=r,this._handleRemoveCardClick=i,this._handleSetLikeCardClick=c,this._handleRemoveLikeCardClick=a}var t,n;return t=e,(n=[{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._handleLikeClick()})),this._owner._id==this._currentUser._id&&this._deleteButton.addEventListener("click",(function(){return e._handleRemoveCardClick(e._id)})),this._cardImage.addEventListener("click",(function(){return e._handleCardClick(e._name,e._link)}))}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"createCard",value:function(){var e=this;return this._element=this._getTemplate(),this._element.id="card-".concat(this._id),this._cardImage=this._element.querySelector(".element__image"),this._cardText=this._element.querySelector(".element__text"),this._likeButton=this._element.querySelector(".element__button"),this._deleteButton=this._element.querySelector(".element__delete"),this._counterLikes=this._element.querySelector(".element__counter-like"),this._owner._id!=this._currentUser._id&&this._deleteButton.remove(),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardText.textContent=this._name,this._likes.length>0&&this._likes.forEach((function(t){t._id==e._currentUser._id&&e._likeButton.classList.add("element__button_active")})),this._counterLikes.textContent=this._likes.length,this._element}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return t&&m(e.prototype,t),n&&m(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var k=v((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),b(this,"resetValidation",(function(){r._toggleButtonState(),r._inputList.forEach((function(e){r._hideInputError(e)}))})),b(this,"enableValidation",(function(){r._setEventListeners()})),b(this,"_setButtonState",(function(e){r._submitButton.disabled=!e})),b(this,"_handleInputForm",(function(e){r._checkInputValidity(e),r._toggleButtonState()})),b(this,"_setEventListeners",(function(){r._toggleButtonState(),r._form.addEventListener("submit",(function(e){e.preventDefault()})),r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._handleInputForm(e)}))}))})),b(this,"_hasInvalidInput",(function(){return r._inputList.some((function(e){return!e.validity.valid}))})),b(this,"_toggleButtonState",(function(){r._hasInvalidInput()?r._setButtonState(!1):r._setButtonState(!0)})),b(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e)})),b(this,"_showInputError",(function(e){var t=r._form.querySelector("#".concat(e.id,"-error"));e.classList.add(r._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(r._errorClass)})),b(this,"_hideInputError",(function(e){var t=r._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(r._inputErrorClass),t.classList.remove(r._errorClass),t.textContent=""})),this._inputSelector=t.inputSelector,this._form=n,this._submitButtonSelector=t.submitButtonSelector,this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector))}));function E(e){return E="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},E(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=j(e)););return e}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}function C(e,t){if(t&&("object"===E(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function j(e){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},j(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=j(r);if(o){var n=j(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._callbackSubmit=t,n._formElement=n._popupElement.querySelector("form"),n._inputList=Array.from(n._formElement.querySelectorAll("input")),n}return t=c,n=[{key:"close",value:function(){w(j(c.prototype),"close",this).call(this),this._formElement.reset()}},{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;w(j(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._callbackSubmit(e._getInputValues())}))}}],n&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(t);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function U(){return U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=T(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},U.apply(this,arguments)}function T(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=B(e)););return e}function x(e,t){return x=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},x(e,t)}function q(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function B(e){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},B(e)}var R=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&x(e,t)}(c,e);var t,n,r,o,i=(r=c,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=B(r);if(o){var n=B(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return q(this,e)});function c(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,c),(n=i.call(this,e))._callbackSubmit=t,n._formElement=n._popupElement.querySelector("form"),n._inputList=Array.from(n._formElement.querySelectorAll("input")),n}return t=c,(n=[{key:"open",value:function(e){this._id=e,U(B(c.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;U(B(c.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._callbackSubmit(e._id)}))}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),c}(t);function A(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var D=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardsUrl=t.cardsUrl,this._userInfoUrl=t.userInfoUrl,this._userInfoUpdateUrl=t.userInfoUpdateUrl,this._headers=t.headers}var t,n;return t=e,n=[{key:"getInitialCards",value:function(){return fetch("".concat(this._cardsUrl),{headers:this._headers,method:"GET"}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"addCard",value:function(e){return fetch("".concat(this._cardsUrl),{headers:this._headers,method:"POST",body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"removeCard",value:function(e){return fetch("".concat(this._cardsUrl,"/").concat(e),{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"setLikeCard",value:function(e){return fetch("".concat(this._cardsUrl,"/").concat(e,"/likes "),{headers:this._headers,method:"PUT"}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"removeLikeCard",value:function(e){return fetch("".concat(this._cardsUrl,"/").concat(e,"/likes "),{headers:this._headers,method:"DELETE"}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"getUserInfo",value:function(){return fetch("".concat(this._userInfoUrl),{headers:this._headers,method:"GET"}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"updateUserInfo",value:function(e){return fetch("".concat(this._userInfoUpdateUrl),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.post})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}},{key:"updateUserAvatar",value:function(e){return fetch("".concat(this._userInfoUpdateUrl,"/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e.avatar})}).then((function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}))}}],n&&A(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),V={inputSelector:".form__text",submitButtonSelector:".form__button",inputErrorClass:"form__text_error",errorClass:"error_open",submitText:"Сохранить",submitingText:"Сохранение..."},N=new D({cardsUrl:"https://mesto.nomoreparties.co/v1/cohort-55/cards",userInfoUrl:"https://nomoreparties.co/v1/cohort-55/users/me",userInfoUpdateUrl:"https://mesto.nomoreparties.co/v1/cohort-55/users/me",headers:{authorization:"06de55a6-944c-4900-b569-16060b72461e","Content-Type":"application/json"}}),J=document.querySelector(".profile__button-add"),F=document.querySelector(".profile__avatar"),G=document.forms["profile-avatar-form"],H=G.querySelector(".form__text_name_link"),z=G.querySelector(V.submitButtonSelector),M=document.querySelector(".profile__button-edit"),K=document.forms["profile-form"],Q=K.querySelector(".form__text_name_name"),W=K.querySelector(".form__text_name_post"),X=document.forms["add-card-form"],Y=K.querySelector(V.submitButtonSelector),Z=X.querySelector(V.submitButtonSelector),$=new k(V,X);$.enableValidation();var ee=new k(V,G);ee.enableValidation();var te=new k(V,K);te.enableValidation();var ne=new s(".popup_image");function re(e,t){ne.open(e,t)}function oe(e){ue.open(e)}function ie(e){return new y(e,"#card",re,pe.getUserInfo(),oe,se,le).createCard()}ne.setEventListeners();var ce=new L(".popup_add-card",(function(e){Z.value=V.submitingText,N.addCard(e).then((function(e){he.addItem(ie(e)),Z.value=V.submitText})).catch((function(e){console.log(e)})),ce.close()}));ce.setEventListeners();var ae=new L(".popup_profile-form",(function(e){Y.value=V.submitingText,N.updateUserInfo(e).then((function(e){pe.setUserInfo(e),Y.value=V.submitText})).catch((function(e){console.log(e)})),ae.close()}));ae.setEventListeners();var ue=new R(".popup_card-remove",(function(e){N.removeCard(e).then((function(){document.querySelector("#card-".concat(e)).remove(),ue.close()})).catch((function(e){console.log(e)}))}));function se(e,t,n){N.setLikeCard(e).then((function(e){n.textContent=e.likes.length,t.classList.add("element__button_active")})).catch((function(e){console.log(e)}))}function le(e,t,n){N.removeLikeCard(e).then((function(e){n.textContent=e.likes.length,t.classList.remove("element__button_active")})).catch((function(e){console.log(e)}))}ue.setEventListeners();var fe=new L(".popup_profile-avatar",(function(e){z.value=V.submitingText,N.updateUserAvatar(e).then((function(e){pe.setUserInfo(e),z.value=V.submitText})).catch((function(e){console.log(e)})),fe.close()}));fe.setEventListeners();var pe=new h({selectorName:".profile__title",selectorAvatar:".profile__avatar-picture",selectorDescription:".profile__subtitle"}),he=new f({renderer:ie},".elements");N.getUserInfo().then((function(e){pe.setUserInfo(e),N.getInitialCards().then((function(e){he.renderer(e)})).catch((function(e){console.log(e)}))})).catch((function(e){console.log(e)})),J.addEventListener("click",(function(){$.resetValidation(),ce.open()})),M.addEventListener("click",(function(){var e=pe.getUserInfo();Q.value=e.name,W.value=e.description,te.resetValidation(),ae.open()})),F.addEventListener("click",(function(){var e=pe.getUserInfo();H.value=e.avatar,ee.resetValidation(),fe.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
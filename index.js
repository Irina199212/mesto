(()=>{"use strict";function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var t=function(){function t(e){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,t),this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}var n,r;return n=t,(r=[{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popupElement.addEventListener("mousedown",(function(t){t.target.classList.contains("popup_opened")&&e.close(),t.target.classList.contains("popup__close")&&e.close()}))}},{key:"open",value:function(){document.addEventListener("keydown",this._handleEscClose),this._popupElement.classList.add("popup_opened")}},{key:"close",value:function(){document.removeEventListener("keydown",this._handleEscClose),this._popupElement.classList.remove("popup_opened")}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function r(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function o(){return o="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=i(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},o.apply(this,arguments)}function i(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=s(e)););return e}function a(e,t){return a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},a(e,t)}function c(e,t){if(t&&("object"===n(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function s(e){return s=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},s(e)}var u=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&a(e,t)}(f,e);var t,n,i,u,l=(i=f,u=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=s(i);if(u){var n=s(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return c(this,e)});function f(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,f),(t=l.call(this,e))._popupPicture=t._popupElement.querySelector(".popup__image"),t._popupCaption=t._popupElement.querySelector(".popup__text"),t}return t=f,(n=[{key:"open",value:function(e,t){o(s(f.prototype),"open",this).call(this),this._popupPicture.src=t,this._popupPicture.alt=e,this._popupCaption.textContent=e}}])&&r(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),f}(t);function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=t.renderer,this._selector=n,this._container=document.querySelector(this._selector)}var t,n;return t=e,(n=[{key:"renderer",value:function(e){var t=this;e.forEach((function(e){t._container.append(t._renderer(e))}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&l(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function p(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var h=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._selectorName=t.selectorName,this._selectorAvatar=t.selectorAvatar,this._selectorDescription=t.selectorDescription,this._nameElement=document.querySelector(this._selectorName),this._avatarElement=document.querySelector(this._selectorAvatar),this._descriptionElement=document.querySelector(this._selectorDescription)}var t,n;return t=e,n=[{key:"getUserInfo",value:function(){return{name:this._nameElement.textContent,description:this._descriptionElement.textContent,_id:this._userId,avatar:this.userAvatar}}},{key:"setUserInfo",value:function(e){this.userName=e.name,this.userAbout=e.about,this.userAvatar=e.avatar,this._userId=e._id,this._nameElement.textContent=this.userName,this._descriptionElement.textContent=this.userAbout,this._avatarElement.src=this.userAvatar,this._avatarElement.alt=this.userName}}],n&&p(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function d(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var y=function(){function e(t,n,r,o,i,a,c){var s=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),_(this,"_handleLikeClick",(function(){s._likeButton.classList.contains("element__button_active")?s._handleRemoveLikeCardClick(s):s._handleSetLikeCardClick(s)})),_(this,"handleDeleteCard",(function(){s._element.remove()})),_(this,"setLikesCounter",(function(e){s._counterLikes.textContent=e.length})),_(this,"setLikesButtonFlag",(function(e){e?s._likeButton.classList.add("element__button_active"):s._likeButton.classList.remove("element__button_active")})),this._name=t.name,this._currentUser=o,this._link=t.link,this._id=t._id,this._owner=t.owner,this._likes=t.likes,this._templateSelector=n,this._handleCardClick=r,this._handleRemoveCardClick=i,this._handleSetLikeCardClick=a,this._handleRemoveLikeCardClick=c}var t,n;return t=e,(n=[{key:"_setEventListeners",value:function(){var e=this;this._likeButton.addEventListener("click",(function(){return e._handleLikeClick()})),this._owner._id==this._currentUser._id&&this._deleteButton.addEventListener("click",(function(){return e._handleRemoveCardClick(e)})),this._cardImage.addEventListener("click",(function(){return e._handleCardClick(e._name,e._link)}))}},{key:"_getTemplate",value:function(){return document.querySelector(this._templateSelector).content.querySelector(".element").cloneNode(!0)}},{key:"createCard",value:function(){var e=this;return this._element=this._getTemplate(),this._cardImage=this._element.querySelector(".element__image"),this._cardText=this._element.querySelector(".element__text"),this._likeButton=this._element.querySelector(".element__button"),this._deleteButton=this._element.querySelector(".element__delete"),this._counterLikes=this._element.querySelector(".element__counter-like"),this._owner._id!=this._currentUser._id&&this._deleteButton.remove(),this._setEventListeners(),this._cardImage.src=this._link,this._cardImage.alt=this._name,this._cardText.textContent=this._name,this._likes.length>0&&this._likes.forEach((function(t){t._id==e._currentUser._id&&e.setLikesButtonFlag(!0)})),this.setLikesCounter(this._likes),this._element}}])&&d(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function v(e,t,n){return t&&m(e.prototype,t),n&&m(e,n),Object.defineProperty(e,"prototype",{writable:!1}),e}function b(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var g=v((function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),b(this,"resetValidation",(function(){r._toggleButtonState(),r._inputList.forEach((function(e){r._hideInputError(e)}))})),b(this,"enableValidation",(function(){r._setEventListeners()})),b(this,"_setButtonState",(function(e){r._submitButton.disabled=!e})),b(this,"_handleInputForm",(function(e){r._checkInputValidity(e),r._toggleButtonState()})),b(this,"_setEventListeners",(function(){r._toggleButtonState(),r._inputList.forEach((function(e){e.addEventListener("input",(function(){r._handleInputForm(e)}))}))})),b(this,"_hasInvalidInput",(function(){return r._inputList.some((function(e){return!e.validity.valid}))})),b(this,"_toggleButtonState",(function(){r._hasInvalidInput()?r._setButtonState(!1):r._setButtonState(!0)})),b(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e)})),b(this,"_showInputError",(function(e){var t=r._form.querySelector("#".concat(e.id,"-error"));e.classList.add(r._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(r._errorClass)})),b(this,"_hideInputError",(function(e){var t=r._form.querySelector("#".concat(e.id,"-error"));e.classList.remove(r._inputErrorClass),t.classList.remove(r._errorClass),t.textContent=""})),this._inputSelector=t.inputSelector,this._form=n,this._submitButtonSelector=t.submitButtonSelector,this._submitButton=this._form.querySelector(this._submitButtonSelector),this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._inputList=Array.from(this._form.querySelectorAll(this._inputSelector))}));function k(e){return k="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},k(e)}function E(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function w(){return w="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=S(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},w.apply(this,arguments)}function S(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=L(e)););return e}function O(e,t){return O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},O(e,t)}function C(e,t){if(t&&("object"===k(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function L(e){return L=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},L(e)}var j=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&O(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=L(r);if(o){var n=L(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return C(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._callbackSubmit=t,n._formElement=n._popupElement.querySelector("form"),n._formElementSubmit=n._formElement.querySelector("input[type='submit']"),n._inputList=Array.from(n._formElement.querySelectorAll("input")),n}return t=a,n=[{key:"setLoader",value:function(e){this._formElementSubmit.value=e?"Сохранение...":"Сохранить"}},{key:"close",value:function(){w(L(a.prototype),"close",this).call(this),this._formElement.reset()}},{key:"_getInputValues",value:function(){var e={};return this._inputList.forEach((function(t){e[t.name]=t.value})),e}},{key:"setEventListeners",value:function(){var e=this;w(L(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._callbackSubmit(e._getInputValues())}))}}],n&&E(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(t);function P(e){return P="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},P(e)}function I(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function U(){return U="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=R(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},U.apply(this,arguments)}function R(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=q(e)););return e}function B(e,t){return B=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},B(e,t)}function T(e,t){if(t&&("object"===P(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function q(e){return q=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},q(e)}var D=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&B(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=q(r);if(o){var n=q(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function a(e,t){var n;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(n=i.call(this,e))._callbackSubmit=t,n._formElement=n._popupElement.querySelector("form"),n}return t=a,(n=[{key:"open",value:function(e){this._id=e,U(q(a.prototype),"open",this).call(this)}},{key:"setEventListeners",value:function(){var e=this;U(q(a.prototype),"setEventListeners",this).call(this),this._formElement.addEventListener("submit",(function(t){t.preventDefault(),e._callbackSubmit(e._id)}))}}])&&I(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),a}(t);function x(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var A=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._cardsUrl=t.cardsUrl,this._userInfoUrl=t.userInfoUrl,this._userInfoUpdateUrl=t.userInfoUpdateUrl,this._headers=t.headers}var t,n;return t=e,n=[{key:"_getResponseData",value:function(e){return e.ok?e.json():Promise.reject("Ошибка: ".concat(e.status))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this._cardsUrl),{headers:this._headers,method:"GET"}).then((function(t){return e._getResponseData(t)}))}},{key:"addCard",value:function(e){var t=this;return fetch("".concat(this._cardsUrl),{headers:this._headers,method:"POST",body:JSON.stringify({name:e.name,link:e.link})}).then((function(e){return t._getResponseData(e)}))}},{key:"removeCard",value:function(e){var t=this;return fetch("".concat(this._cardsUrl,"/").concat(e),{headers:this._headers,method:"DELETE"}).then((function(e){return t._getResponseData(e)}))}},{key:"setLikeCard",value:function(e){var t=this;return fetch("".concat(this._cardsUrl,"/").concat(e,"/likes "),{headers:this._headers,method:"PUT"}).then((function(e){return t._getResponseData(e)}))}},{key:"removeLikeCard",value:function(e){var t=this;return fetch("".concat(this._cardsUrl,"/").concat(e,"/likes "),{headers:this._headers,method:"DELETE"}).then((function(e){return t._getResponseData(e)}))}},{key:"getUserInfo",value:function(){var e=this;return fetch("".concat(this._userInfoUrl),{headers:this._headers,method:"GET"}).then((function(t){return e._getResponseData(t)}))}},{key:"updateUserInfo",value:function(e){var t=this;return fetch("".concat(this._userInfoUpdateUrl),{headers:this._headers,method:"PATCH",body:JSON.stringify({name:e.name,about:e.post})}).then((function(e){return t._getResponseData(e)}))}},{key:"updateUserAvatar",value:function(e){var t=this;return fetch("".concat(this._userInfoUpdateUrl,"/avatar"),{headers:this._headers,method:"PATCH",body:JSON.stringify({avatar:e.avatar})}).then((function(e){return t._getResponseData(e)}))}}],n&&x(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function V(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var N={inputSelector:".form__text",submitButtonSelector:".form__button",inputErrorClass:"form__text_error",errorClass:"error_open"},F=new A({cardsUrl:"https://mesto.nomoreparties.co/v1/cohort-55/cards",userInfoUrl:"https://nomoreparties.co/v1/cohort-55/users/me",userInfoUpdateUrl:"https://mesto.nomoreparties.co/v1/cohort-55/users/me",headers:{authorization:"06de55a6-944c-4900-b569-16060b72461e","Content-Type":"application/json"}}),J=document.querySelector(".profile__button-add"),G=document.querySelector(".profile__avatar"),H=document.forms["profile-avatar-form"],M=document.querySelector(".profile__button-edit"),z=document.forms["profile-form"],$=z.querySelector(".form__text_name_name"),K=z.querySelector(".form__text_name_post"),Q=new g(N,document.forms["add-card-form"]);Q.enableValidation();var W=new g(N,H);W.enableValidation();var X=new g(N,z);X.enableValidation();var Y=new u(".popup_image");function Z(e,t){Y.open(e,t)}function ee(e){oe.open(e)}function te(e){return new y(e,"#card",Z,se.getUserInfo(),ee,ie,ae).createCard()}Y.setEventListeners();var ne=new j(".popup_add-card",(function(e){ne.setLoader(!0),F.addCard(e).then((function(e){ue.addItem(te(e)),ne.close()})).catch((function(e){console.log(e)})).finally((function(){ne.setLoader(!1)}))}));ne.setEventListeners();var re=new j(".popup_profile-form",(function(e){re.setLoader(!0),F.updateUserInfo(e).then((function(e){se.setUserInfo(e),re.close()})).catch((function(e){console.log(e)})).finally((function(){re.setLoader(!1)}))}));re.setEventListeners();var oe=new D(".popup_card-remove",(function(e){F.removeCard(e._id).then((function(){e.handleDeleteCard(),oe.close()})).catch((function(e){console.log(e)}))}));function ie(e){F.setLikeCard(e._id).then((function(t){e.setLikesButtonFlag(!0),e.setLikesCounter(t.likes)})).catch((function(e){console.log(e)}))}function ae(e){F.removeLikeCard(e._id).then((function(t){e.setLikesButtonFlag(!1),e.setLikesCounter(t.likes)})).catch((function(e){console.log(e)}))}oe.setEventListeners();var ce=new j(".popup_profile-avatar",(function(e){ce.setLoader(!0),F.updateUserAvatar(e).then((function(e){se.setUserInfo(e),ce.close()})).catch((function(e){console.log(e)})).finally((function(){ce.setLoader(!1)}))}));ce.setEventListeners();var se=new h({selectorName:".profile__title",selectorAvatar:".profile__avatar-picture",selectorDescription:".profile__subtitle"}),ue=new f({renderer:te},".elements");Promise.all([F.getUserInfo(),F.getInitialCards()]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,c=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){c=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(c)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return V(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?V(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];se.setUserInfo(o),ue.renderer(i)})).catch((function(e){console.log(e)})),J.addEventListener("click",(function(){Q.resetValidation(),ne.open()})),M.addEventListener("click",(function(){var e=se.getUserInfo();$.value=e.name,K.value=e.description,X.resetValidation(),re.open()})),G.addEventListener("click",(function(){W.resetValidation(),ce.open()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,